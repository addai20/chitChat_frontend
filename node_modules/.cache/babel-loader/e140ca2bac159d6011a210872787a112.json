{"ast":null,"code":"import _classCallCheck from \"/Users/benjaminaddai/dev/MOD5/project/chitChat/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/benjaminaddai/dev/MOD5/project/chitChat/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/benjaminaddai/dev/MOD5/project/chitChat/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/benjaminaddai/dev/MOD5/project/chitChat/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/benjaminaddai/dev/MOD5/project/chitChat/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/benjaminaddai/dev/MOD5/project/chitChat/frontend/src/containers/MessagesBox.js\";\nimport React, { Component } from 'react';\nimport Message from '../components/Message';\n\nvar MessagesBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessagesBox, _Component);\n\n  function MessagesBox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MessagesBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MessagesBox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.formatTime = function (time) {\n      //take in a the time created and return only the time\n      //EXAMPLE TIME 2019-04-18T00:21:38.855Z\n      var arr = time.split(':');\n      var hours = arr[1];\n      var minutes = arr[2];\n      return \"\".concat(hours, \":\").concat(minutes.split(\".\")[0]);\n    };\n\n    return _this;\n  }\n\n  _createClass(MessagesBox, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: \"messagesBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.props.selectedUser ? this.props.messages.map(function (msg) {\n        if (_this2.props.currentUser.id === msg.sender_id) {\n          return React.createElement(\"div\", {\n            className: \"container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: \"http://icons.iconarchive.com/icons/papirus-team/papirus-status/64/avatar-default-icon.png\",\n            alt: \"Avatar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, \"Me:\"), \" \", React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, msg.text_body), React.createElement(\"span\", {\n            className: \"time-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, _this2.formatTime(msg.created_at)));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"container darker\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: \"http://icons.iconarchive.com/icons/papirus-team/papirus-status/64/avatar-default-icon.png\",\n            alt: \"Avatar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, msg.text_body), React.createElement(\"span\", {\n            className: \"time-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, _this2.formatTime(msg.created_at)));\n        }\n      }) : null);\n    }\n  }]);\n\n  return MessagesBox;\n}(Component);\n\nexport default MessagesBox; // MESSAGE COMING FROM CURRENTLY LOGGED IN USER\n// <Message\n//   className=\"messageSent\"\n//   key={msg.id}\n//   sender={msg.sender_id}\n//   receiver={msg.receiver_id}\n//   text={msg.text_body}\n//   deleteMessage={this.props.deleteMessage}\n// />\n// MESSAGE SENT FROM NON USER\n// <Message\n//   className=\"messageRcvd\"\n//   key={msg.id}\n//   sender={msg.sender_id}\n//   receiver={msg.receiver_id}\n//   text={msg.text_body}\n//   deleteMessage={this.props.deleteMessage}\n// />\n// this.props.selectedUser.id ? this.props.messages.map((msg)=>{\n//   return (\n//     this.props.currentUser.id === msg.sender_id ?\n//\n//     <div className=\"container\">\n//       <img src=\"http://icons.iconarchive.com/icons/papirus-team/papirus-status/64/avatar-default-icon.png\" alt=\"Avatar\"/>\n//       <p>{msg.text_body}</p>\n//       <span className=\"time-right\">{this.formatTime(msg.created_at)}</span>\n//     </div>\n//\n//   :\n//\n//   <div className=\"container darker\">\n//     <img src=\"http://icons.iconarchive.com/icons/papirus-team/papirus-status/64/avatar-default-icon.png\" alt=\"Avatar\"/>\n//     <p>{msg.text_body}</p>\n//     <span className=\"time-right\">{this.formatTime(msg.created_at)}</span>\n//   </div>\n//\n// )\n//\n// })\n// :  null","map":{"version":3,"sources":["/Users/benjaminaddai/dev/MOD5/project/chitChat/frontend/src/containers/MessagesBox.js"],"names":["React","Component","Message","MessagesBox","formatTime","time","arr","split","hours","minutes","console","log","props","selectedUser","messages","map","msg","currentUser","id","sender_id","text_body","created_at"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;IAEMC,W;;;;;;;;;;;;;;;;;;UAEJC,U,GAAa,UAACC,IAAD,EAAS;AACpB;AACA;AAEA,UAAIC,GAAG,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAV;AACA,UAAIC,KAAK,GAAGF,GAAG,CAAC,CAAD,CAAf;AACA,UAAIG,OAAO,GAAGH,GAAG,CAAC,CAAD,CAAjB;AAEA,uBAAUE,KAAV,cAAmBC,OAAO,CAACF,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAnB;AAED,K;;;;;;;6BAEO;AAAA;;AACNG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,KAAL,CAAWC,YAAX,GAA0B,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,GAApB,CAAwB,UAACC,GAAD,EAAO;AAExD,YAAG,MAAI,CAACJ,KAAL,CAAWK,WAAX,CAAuBC,EAAvB,KAA8BF,GAAG,CAACG,SAArC,EAAgD;AAC9C,iBAGE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,GAAG,EAAC,2FAAT;AAAqG,YAAA,GAAG,EAAC,QAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,OAEa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIH,GAAG,CAACI,SAAR,CAFb,EAGE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8B,MAAI,CAAChB,UAAL,CAAgBY,GAAG,CAACK,UAApB,CAA9B,CAHF,CAHF;AASD,SAVD,MAUO;AACL,iBACE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,GAAG,EAAC,2FAAT;AAAqG,YAAA,GAAG,EAAC,QAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIL,GAAG,CAACI,SAAR,CAFF,EAGE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8B,MAAI,CAAChB,UAAL,CAAgBY,GAAG,CAACK,UAApB,CAA9B,CAHF,CADF;AAOD;AASJ,OA7B4B,CAA1B,GA8BF,IA/BD,CADF;AAmCD;;;;EAnDuBpB,S;;AAsD1B,eAAeE,WAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport Message from '../components/Message'\n\nclass MessagesBox extends Component {\n\n  formatTime = (time) =>{\n    //take in a the time created and return only the time\n    //EXAMPLE TIME 2019-04-18T00:21:38.855Z\n\n    let arr = time.split(':')\n    let hours = arr[1]\n    let minutes = arr[2]\n\n    return `${hours}:${minutes.split(\".\")[0]}`\n\n  }\n\n  render(){\n    console.log(this.props);\n    return(\n      <div className=\"messagesBox\">\n        {this.props.selectedUser ? this.props.messages.map((msg)=>{\n\n          if(this.props.currentUser.id === msg.sender_id ){\n            return (\n\n\n              <div className=\"container\">\n                <img src=\"http://icons.iconarchive.com/icons/papirus-team/papirus-status/64/avatar-default-icon.png\" alt=\"Avatar\"/>\n                <p>Me:</p> <p>{msg.text_body}</p> \n                <span className=\"time-right\">{this.formatTime(msg.created_at)}</span>\n              </div>\n            )\n          } else {\n            return (\n              <div className=\"container darker\">\n                <img src=\"http://icons.iconarchive.com/icons/papirus-team/papirus-status/64/avatar-default-icon.png\" alt=\"Avatar\"/>\n                <p>{msg.text_body}</p>\n                <span className=\"time-right\">{this.formatTime(msg.created_at)}</span>\n              </div>\n            )\n          }\n\n\n\n\n\n\n\n\n      })\n    :  null}\n      </div>\n    )\n  }\n}\n\nexport default MessagesBox\n\n// MESSAGE COMING FROM CURRENTLY LOGGED IN USER\n\n// <Message\n//   className=\"messageSent\"\n//   key={msg.id}\n//   sender={msg.sender_id}\n//   receiver={msg.receiver_id}\n//   text={msg.text_body}\n//   deleteMessage={this.props.deleteMessage}\n// />\n\n// MESSAGE SENT FROM NON USER\n// <Message\n//   className=\"messageRcvd\"\n//   key={msg.id}\n//   sender={msg.sender_id}\n//   receiver={msg.receiver_id}\n//   text={msg.text_body}\n//   deleteMessage={this.props.deleteMessage}\n// />\n\n// this.props.selectedUser.id ? this.props.messages.map((msg)=>{\n//   return (\n//     this.props.currentUser.id === msg.sender_id ?\n//\n//     <div className=\"container\">\n//       <img src=\"http://icons.iconarchive.com/icons/papirus-team/papirus-status/64/avatar-default-icon.png\" alt=\"Avatar\"/>\n//       <p>{msg.text_body}</p>\n//       <span className=\"time-right\">{this.formatTime(msg.created_at)}</span>\n//     </div>\n//\n//   :\n//\n//   <div className=\"container darker\">\n//     <img src=\"http://icons.iconarchive.com/icons/papirus-team/papirus-status/64/avatar-default-icon.png\" alt=\"Avatar\"/>\n//     <p>{msg.text_body}</p>\n//     <span className=\"time-right\">{this.formatTime(msg.created_at)}</span>\n//   </div>\n//\n// )\n//\n// })\n// :  null\n"]},"metadata":{},"sourceType":"module"}